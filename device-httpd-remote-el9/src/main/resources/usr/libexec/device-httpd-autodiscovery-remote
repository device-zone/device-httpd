#!/bin/bash
  
if [ $# -eq 2 ]; then

  instance="${1}"
  line="${2}"

  cat > "remote.conf" <<- EOF
# Generated by $0 on `date`
# DO NOT MODIFY THIS FILE - it will be overwritten on server restart.
#

<IfModule !proxy_module>
  LoadModule proxy_module modules/mod_proxy.so
</IfModule>
<IfModule !ssl_module>
  LoadModule ssl_module modules/mod_ssl.so
</IfModule>

EOF

  #
  # Declare remote proxies
  
  # find /etc/device/services/www/remote/ -mindepth 1 -maxdepth 1 -type l
  while read line; do

    if test ! -f "$line/name.txt"; then
      continue;
    fi
    if test ! -f "$line/url.txt"; then
      continue;
    fi
    remotename="$(head -n 1 ${line}/name.txt)"
    url="$(head -n 1 ${line}/url.txt)"

    # tls ca certs for https connection
    tlscacerts=
    if test -f "${line}/tls-ca-certs.crt"; then
      tlscacerts=$(readlink -f "$line/tls-ca-certs.crt")
    fi

    cat >> "remote.conf" <<- EOF

# Remote proxy configured from ${line}/name.txt
<Proxy ${url}>
  SSLProxyEngine on
EOF

    # normalise CA certificates
    if test -n "${tlscacerts}"; then

      tlscacertsfile="/run/httpd/instance-device-${instance}/remote-tlscacerts-${remotename}.pem"

      redwax-tool --pem-in "${tlscacerts}" --root-out --no-trust-out --pem-out "tlscacerts.pem"

      install -m 640 -o root -g apache "tlscacerts.pem" "${tlscacertsfile}"

      cat >> "remote.conf" <<- EOF
  SSLProxyCACertificateFile "${tlscacertsfile}"
EOF
    fi

    cat >> "remote.conf" <<- EOF
</Proxy>
EOF

  done < <(find /etc/device/services/www/remote/ -mindepth 1 -maxdepth 1 -type l)


  install -m 640 "remote.conf" "/etc/httpd/conf.device.d/instance/${instance}"/remote.conf

fi

