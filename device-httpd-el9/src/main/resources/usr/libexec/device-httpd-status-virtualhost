#!/bin/bash

#
# Per application? Run all scripts

run_scripts() {

  instance="${1}"
  virtualhost="${2}"
  url="${3}"
  line="${4}"

  find "/usr/libexec/device-status/httpd-virtualhost.d" -type f -executable | sort | \
  while read x; do
    "$x" "${instance}" "${virtualhost}" "${url}" "${line}" < /dev/null || true;
  done

}


if [ $# -eq 2 ]; then

  instance="${1}"

  #
  # Handle virtual hosts

  echo ""
  echo "  Virtualhosts:"

  # find /etc/device/services/www/virtualhost/ -mindepth 1 -maxdepth 1 -type l
  while read line; do

    if test ! -f "$line/listen.d/instance.d/name.txt" -o "${instance}" != "$(head $line/listen.d/instance.d/name.txt)"; then
      continue;
    fi
    if test ! -f "$line/name.txt"; then
      continue;
    fi

    instance="$(head -n 1 $line/listen.d/instance.d/name.txt)"
    virtualhost="$(head -n 1 $line/name.txt)"

    echo
    echo "  - Virtualhost + ${virtualhost}:"

    if test -f "$line/server-name.txt"; then
      servername=$(head -n 1 $line/server-name.txt)
    else
      servername=$(hostname -f)
    fi

#    if test -f "${line}/listen.d/port.txt"; then
#      echo "  - http://${servername}:$(head -n 1 ${line}/listen.d/port.txt)"
#    fi
    if test -f "${line}/listen.d/tls-port.txt"; then
      tlsport="$(head -n 1 ${line}/listen.d/tls-port.txt)"
      if test "443" = "${tlsport}"; then
        url="https://${servername}"
      else
        url="https://${servername}:${tlsport}"
      fi

      echo "    url: ${url}"
      echo "    certificates:"

      redwax-tool --pem-in="/etc/pki/tls/private/*" \
                  --pem-in="/etc/pki/tls/certs/ca-bundle.trust.crt" \
                  --pem-in="/etc/pki/tls/certs/*.pem" \
                  --filter=search \
                  --filter-hostname="${servername}" \
                  --filter-current \
                  --quiet \
                  --format-out json \
                  --metadata-threshold 30 \
                  --metadata-out - | \
      jq -r '

def colors:
 {
 "invert": "\u001b[7m",
 "black": "\u001b[30m",
 "red": "\u001b[31m",
 "green": "\u001b[32m",
 "yellow": "\u001b[33m",
 "blue": "\u001b[34m",
 "magenta": "\u001b[35m",
 "cyan": "\u001b[36m",
 "white": "\u001b[37m",
 "reset": "\u001b[0m",
};

. | ( .Certificates[] | 
"    - subject: " + .Data.Subject ,
"      issuer: " + .Data.Issuer,
"      origin: " + .Origin,
if ( .Data.Validity.Error != null ) then "      error: " + colors.red + colors.invert + .Data.Validity.Error + colors.reset else empty end,
if ( .Data.Validity.Warning != null ) then "      warning: " + colors.yellow + colors.invert + .Data.Validity.Warning + colors.reset else empty end,
if ( .Data.Validity.Status != null ) then "      status: " + colors.green + .Data.Validity.Status + colors.reset else empty end

) // "    - error: " + colors.red + colors.invert + "No certificate found under /etc/pki/tls to match \"'${servername}'\"" + colors.reset
'

      if test ${PIPESTATUS[0]} -ne 0; then
        echo "    - error: No certificate found under /etc/pki/tls to match '${servername}'"
      fi

    fi

    run_scripts "${instance}" "${virtualhost}" "${url}" "${line}"

  done < <(find /etc/device/services/www/virtualhost/ -mindepth 1 -maxdepth 1 -type l)

fi


